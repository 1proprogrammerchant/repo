From c79563ea343075d97d30fe3a6598775538676515 Mon Sep 17 00:00:00 2001
From: Ilya Fedin <fedin-ilja2010@ya.ru>
Date: Sat, 17 Sep 2022 14:08:03 +0400
Subject: [PATCH 1/6] Add support for AVIF, HEIF and JPEG XL (only on Linux
 yet)

---
 external/CMakeLists.txt                       |  1 +
 external/kimageformats/CMakeLists.txt         | 69 +++++++++++++++++++
 external/qt/qt_static_plugins/CMakeLists.txt  |  1 +
 .../qt_static_plugins/qt_static_plugins.cpp   |  8 ++-
 4 files changed, 77 insertions(+), 2 deletions(-)
 create mode 100644 external/kimageformats/CMakeLists.txt

diff --git a/external/CMakeLists.txt b/external/CMakeLists.txt
index 75f608a..e769380 100644
--- a/external/CMakeLists.txt
+++ b/external/CMakeLists.txt
@@ -42,6 +42,7 @@ if (LINUX AND NOT DESKTOP_APP_DISABLE_JEMALLOC)
 endif()
 add_checked_subdirectory(jpeg)
 add_checked_subdirectory(kcoreaddons)
+add_checked_subdirectory(kimageformats)
 add_checked_subdirectory(lz4)
 add_checked_subdirectory(minizip)
 if (LINUX)
diff --git a/external/kimageformats/CMakeLists.txt b/external/kimageformats/CMakeLists.txt
new file mode 100644
index 0000000..1e2f261
--- /dev/null
+++ b/external/kimageformats/CMakeLists.txt
@@ -0,0 +1,69 @@
+# This file is part of Desktop App Toolkit,
+# a set of libraries for developing nice desktop applications.
+#
+# For license and copyright information please follow this link:
+# https://github.com/desktop-app/legal/blob/master/LEGAL
+
+if ((DESKTOP_APP_USE_PACKAGED AND NOT DESKTOP_APP_USE_PACKAGED_LAZY) OR NOT LINUX) # should work on non-Linux, but cmake rules aren't implemented yet
+    add_library(external_kimageformats INTERFACE IMPORTED GLOBAL)
+    add_library(desktop-app::external_kimageformats ALIAS external_kimageformats)
+    return()
+endif()
+
+add_library(external_kimageformats STATIC)
+add_library(desktop-app::external_kimageformats ALIAS external_kimageformats)
+init_target(external_kimageformats "(external)")
+
+set(kimageformats_loc ${third_party_loc}/kimageformats)
+set(kimageformats_src ${kimageformats_loc}/src/imageformats)
+
+set_target_properties(external_kimageformats PROPERTIES AUTOMOC ON)
+
+nice_target_sources(external_kimageformats ${kimageformats_src}
+PRIVATE
+    avif.cpp
+    heif.cpp
+    jxl.cpp
+)
+
+target_compile_definitions(external_kimageformats
+PRIVATE
+    QT_STATICPLUGIN
+    KIMG_JXL_API_VERSION=70
+)
+
+target_link_libraries(external_kimageformats
+PRIVATE
+    desktop-app::external_qt
+)
+
+if (DESKTOP_APP_USE_PACKAGED)
+    find_package(libavif REQUIRED)
+    find_package(PkgConfig REQUIRED)
+    pkg_check_modules(LIBHEIF REQUIRED IMPORTED_TARGET libheif)
+    pkg_check_modules(LIBJXL REQUIRED IMPORTED_TARGET libjxl)
+    pkg_check_modules(LIBJXL_THREADS REQUIRED IMPORTED_TARGET libjxl_threads)
+
+    target_link_libraries(external_kimageformats
+    PRIVATE
+        avif
+        PkgConfig::LIBHEIF
+        PkgConfig::LIBJXL
+        PkgConfig::LIBJXL_THREADS
+    )
+else()
+    target_link_static_libraries(external_kimageformats
+    PRIVATE
+        avif
+        heif
+        jxl
+        jxl_threads
+        dav1d
+        libde265
+        brotlicommon-static
+        brotlidec-static
+        brotlienc-static
+        hwy
+        lcms2
+    )
+endif()
diff --git a/external/qt/qt_static_plugins/CMakeLists.txt b/external/qt/qt_static_plugins/CMakeLists.txt
index 7a8651a..ce2fa82 100644
--- a/external/qt/qt_static_plugins/CMakeLists.txt
+++ b/external/qt/qt_static_plugins/CMakeLists.txt
@@ -16,6 +16,7 @@ PRIVATE
 target_link_libraries(external_qt_static_plugins
 PUBLIC
     desktop-app::external_qt
+    desktop-app::external_kimageformats
 )
 
 if (LINUX)
diff --git a/external/qt/qt_static_plugins/qt_static_plugins.cpp b/external/qt/qt_static_plugins/qt_static_plugins.cpp
index ae0babe..b06abb0 100644
--- a/external/qt/qt_static_plugins/qt_static_plugins.cpp
+++ b/external/qt/qt_static_plugins/qt_static_plugins.cpp
@@ -54,8 +54,12 @@ Q_IMPORT_PLUGIN(QGtk3ThemePlugin)
 #endif // Q_OS_WIN | Q_OS_MAC | Q_OS_UNIX
 #endif // !DESKTOP_APP_USE_PACKAGED
 
-#if defined Q_OS_UNIX && !defined Q_OS_MAC
 #if !defined DESKTOP_APP_USE_PACKAGED || defined DESKTOP_APP_USE_PACKAGED_LAZY
+#if defined Q_OS_UNIX && !defined Q_OS_MAC
+Q_IMPORT_PLUGIN(QAVIFPlugin)
+Q_IMPORT_PLUGIN(HEIFPlugin)
+Q_IMPORT_PLUGIN(QJpegXLPlugin)
+
 Q_IMPORT_PLUGIN(NimfInputContextPlugin)
 #ifndef DESKTOP_APP_DISABLE_DBUS_INTEGRATION
 Q_IMPORT_PLUGIN(QFcitxPlatformInputContextPlugin)
@@ -66,5 +70,5 @@ Q_IMPORT_PLUGIN(QFcitx5PlatformInputContextPlugin)
 #ifndef DESKTOP_APP_DISABLE_X11_INTEGRATION
 Q_IMPORT_PLUGIN(QHimePlatformInputContextPlugin)
 #endif // !DESKTOP_APP_DISABLE_X11_INTEGRATION
-#endif // !DESKTOP_APP_USE_PACKAGED || DESKTOP_APP_USE_PACKAGED_LAZY
 #endif // Q_OS_UNIX && !Q_OS_MAC
+#endif // !DESKTOP_APP_USE_PACKAGED || DESKTOP_APP_USE_PACKAGED_LAZY

From 152fc28f343aff610f5f9dbdff243bbdbda85bf0 Mon Sep 17 00:00:00 2001
From: Ilya Fedin <fedin-ilja2010@ya.ru>
Date: Mon, 19 Sep 2022 06:16:09 +0400
Subject: [PATCH 2/6] Add a shim for KSandbox

---
 external/kcoreaddons/KSandbox | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)
 create mode 100644 external/kcoreaddons/KSandbox

diff --git a/external/kcoreaddons/KSandbox b/external/kcoreaddons/KSandbox
new file mode 100644
index 0000000..83c0674
--- /dev/null
+++ b/external/kcoreaddons/KSandbox
@@ -0,0 +1,23 @@
+// This file is part of Desktop App Toolkit,
+// a set of libraries for developing nice desktop applications.
+//
+// For license and copyright information please follow this link:
+// https://github.com/desktop-app/legal/blob/master/LEGAL
+//
+#pragma once
+
+namespace KSandbox {
+
+inline bool isInside() {
+    return false;
+}
+
+inline bool isFlatpak() {
+    return false;
+}
+
+inline bool isSnap() {
+    return false;
+}
+
+} // namespace KSandbox

From d405db0737dba6160c770b2029e20e72e8bd824f Mon Sep 17 00:00:00 2001
From: Ilya Fedin <fedin-ilja2010@ya.ru>
Date: Mon, 19 Sep 2022 15:24:26 +0400
Subject: [PATCH 3/6] Fix order of brotlicommon linking

---
 external/kimageformats/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/external/kimageformats/CMakeLists.txt b/external/kimageformats/CMakeLists.txt
index 1e2f261..f0e7e92 100644
--- a/external/kimageformats/CMakeLists.txt
+++ b/external/kimageformats/CMakeLists.txt
@@ -60,9 +60,9 @@ else()
         jxl_threads
         dav1d
         libde265
-        brotlicommon-static
         brotlidec-static
         brotlienc-static
+        brotlicommon-static
         hwy
         lcms2
     )

From 6c7b8d8b4c8bfe261f67d48edb4bfd9dbcf3a0d4 Mon Sep 17 00:00:00 2001
From: John Preston <johnprestonmail@gmail.com>
Date: Mon, 19 Sep 2022 16:28:05 +0400
Subject: [PATCH 4/6] Link Qt::WidgetsPrivate for touch support in popup
 windows.

---
 external/qt/CMakeLists.txt | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/external/qt/CMakeLists.txt b/external/qt/CMakeLists.txt
index 16f9087..5d6b5c0 100644
--- a/external/qt/CMakeLists.txt
+++ b/external/qt/CMakeLists.txt
@@ -19,6 +19,7 @@ if (DESKTOP_APP_USE_PACKAGED)
         Qt::GuiPrivate
         $<TARGET_NAME_IF_EXISTS:Qt::OpenGL>
         Qt::Widgets
+        Qt::WidgetsPrivate
         $<TARGET_NAME_IF_EXISTS:Qt::OpenGLWidgets>
         Qt::Network
         Qt::Svg
@@ -41,8 +42,10 @@ INTERFACE
     $<$<TARGET_EXISTS:Qt::DBus>:${qt_loc}/include/QtDBus>
     ${qt_loc}/include/QtCore/${qt_version}
     ${qt_loc}/include/QtGui/${qt_version}
+    ${qt_loc}/include/QtWidgets/${qt_version}
     ${qt_loc}/include/QtCore/${qt_version}/QtCore
     ${qt_loc}/include/QtGui/${qt_version}/QtGui
+    ${qt_loc}/include/QtWidgets/${qt_version}/QtWidgets
 )
 
 target_compile_definitions(external_qt

From 19aa4dd1752bfcda2c80408e78e0811f023a26f7 Mon Sep 17 00:00:00 2001
From: Ilya Fedin <fedin-ilja2010@ya.ru>
Date: Tue, 20 Sep 2022 23:31:35 +0400
Subject: [PATCH 5/6] Replace FindThreads with custom logic

It doesn't seem to do what we want, unfortunately...
---
 options_linux.cmake | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/options_linux.cmake b/options_linux.cmake
index c915501..7d9f166 100644
--- a/options_linux.cmake
+++ b/options_linux.cmake
@@ -4,6 +4,8 @@
 # For license and copyright information please follow this link:
 # https://github.com/desktop-app/legal/blob/master/LEGAL
 
+include(CheckCXXCompilerFlag)
+
 target_compile_options(common_options
 INTERFACE
     -fstack-protector-all
@@ -91,14 +93,15 @@ if (DESKTOP_APP_USE_ALLOCATION_TRACER)
     )
 endif()
 
-if (DESKTOP_APP_USE_PACKAGED)
-    set(THREADS_PREFER_PTHREAD_FLAG ON)
-    find_package(Threads REQUIRED)
-    target_link_libraries(common_options
+check_cxx_compiler_flag(-pthread DESKTOP_APP_HAVE_PTHREAD_ARG)
+if (DESKTOP_APP_HAVE_PTHREAD_ARG)
+    target_link_options(common_options
     INTERFACE
-        Threads::Threads
+        -pthread
     )
-else()
+endif()
+
+if (NOT DESKTOP_APP_USE_PACKAGED)
     if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
         target_link_options(common_options
         INTERFACE
@@ -118,7 +121,6 @@ else()
     endif()
     target_link_options(common_options
     INTERFACE
-        -pthread
         -rdynamic
         -fwhole-program
         -Wl,-z,relro

From 6bcdd3fa3618038b1824a2f772543d9db48e8b27 Mon Sep 17 00:00:00 2001
From: Ilya Fedin <fedin-ilja2010@ya.ru>
Date: Wed, 21 Sep 2022 10:27:14 +0400
Subject: [PATCH 6/6] Build bundled kcoreaddons

---
 external/kcoreaddons/CMakeLists.txt | 104 ++++++++++++++++++++++------
 external/kcoreaddons/KSandbox       |  23 ------
 external/kcoreaddons/KUrlMimeData   |  26 -------
 external/qt/package.cmake           |   4 +-
 4 files changed, 82 insertions(+), 75 deletions(-)
 delete mode 100644 external/kcoreaddons/KSandbox
 delete mode 100644 external/kcoreaddons/KUrlMimeData

diff --git a/external/kcoreaddons/CMakeLists.txt b/external/kcoreaddons/CMakeLists.txt
index 528a487..2b79074 100644
--- a/external/kcoreaddons/CMakeLists.txt
+++ b/external/kcoreaddons/CMakeLists.txt
@@ -4,46 +4,104 @@
 # For license and copyright information please follow this link:
 # https://github.com/desktop-app/legal/blob/master/LEGAL
 
-if (NOT LINUX)
+if (DESKTOP_APP_USE_PACKAGED AND QT_VERSION_MAJOR EQUAL 5)
     add_library(external_kcoreaddons INTERFACE IMPORTED GLOBAL)
     add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
 
-    target_include_directories(external_kcoreaddons SYSTEM
-    INTERFACE
-        ${CMAKE_CURRENT_SOURCE_DIR}
-    )
+    if (DESKTOP_APP_USE_PACKAGED_LAZY)
+        find_package(KF5CoreAddons QUIET)
+    else()
+        find_package(KF5CoreAddons)
+    endif()
+
+    if (KF5CoreAddons_FOUND)
+        target_link_libraries(external_kcoreaddons INTERFACE KF5::CoreAddons)
+        return()
+    endif()
+endif()
+
+add_library(external_kcoreaddons STATIC)
+add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
+init_target(external_kcoreaddons "(external)")
+
+set(kcoreaddons_loc ${third_party_loc}/kcoreaddons)
+set(kcoreaddons_src ${kcoreaddons_loc}/src/lib)
 
-    target_link_libraries(external_kcoreaddons
-    INTERFACE
-        desktop-app::external_qt
+nice_target_sources(external_kcoreaddons ${kcoreaddons_src}
+PRIVATE
+    io/kurlmimedata.cpp
+    io/kurlmimedata.h
+    util/ksandbox.cpp
+    util/ksandbox.h
+    util/kshell.cpp
+    util/kshell.h
+    util/kshell_p.h
+    util/kshell_unix.cpp
+    util/kshell_win.cpp
+    util/kuser.h
+    util/kuser_unix.cpp
+    util/kuser_win.cpp
+)
+
+if (NOT UNIX)
+    remove_target_sources(external_kcoreaddons ${kcoreaddons_src}
+        util/kshell_unix.cpp
+        util/kuser_unix.cpp
     )
+endif()
 
-    return()
+if (NOT WIN32)
+    remove_target_sources(external_kcoreaddons ${kcoreaddons_src}
+        util/kshell_win.cpp
+        util/kuser_win.cpp
+    )
 endif()
 
-if (DESKTOP_APP_USE_PACKAGED)
-    add_library(external_kcoreaddons INTERFACE IMPORTED GLOBAL)
-    add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
+if (NOT DESKTOP_APP_DISABLE_DBUS_INTEGRATION)
+    set_source_files_properties(${kcoreaddons_src}/io/org.freedesktop.portal.FileTransfer.xml PROPERTIES INCLUDE ${kcoreaddons_src}/io/dbustypes_p.h)
+    qt_add_dbus_interface(_dbus_SRCS ${kcoreaddons_src}/io/org.freedesktop.portal.FileTransfer.xml org.freedesktop.portal.FileTransfer)
+
+    set_source_files_properties(${kcoreaddons_src}/io/org.kde.KIOFuse.VFS.xml PROPERTIES NO_NAMESPACE TRUE)
+    qt_add_dbus_interface(_dbus_SRCS ${kcoreaddons_src}/io/org.kde.KIOFuse.VFS.xml org.kde.KIOFuse.VFS)
+
+    target_sources(external_kcoreaddons PRIVATE ${_dbus_SRCS})
 
-    find_package(KF5CoreAddons REQUIRED)
-    target_link_libraries(external_kcoreaddons INTERFACE KF5::CoreAddons)
-    return()
+    target_compile_definitions(external_kcoreaddons
+    PRIVATE
+        HAVE_QTDBUS
+    )
 endif()
 
-add_library(external_kcoreaddons STATIC IMPORTED GLOBAL)
-add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
+file(TOUCH
+    ${CMAKE_CURRENT_BINARY_DIR}/config-util.h
+    ${CMAKE_CURRENT_BINARY_DIR}/config-kdirwatch.h
+)
+
+file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/include/kcoreaddons_export.h
+    "#define KCOREADDONS_ENABLE_DEPRECATED_SINCE(major, minor) 0"
+)
+
+file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/kcoreaddons_debug.h
+    "#pragma once\n#include <QLoggingCategory>\nstatic const QLoggingCategory KCOREADDONS_DEBUG(\"kf.coreaddons\");"
+)
 
-find_library(DESKTOP_APP_KCOREADDONS_LIBRARIES libKF5CoreAddons.a REQUIRED)
-set_target_properties(external_kcoreaddons PROPERTIES
-    IMPORTED_LOCATION "${DESKTOP_APP_KCOREADDONS_LIBRARIES}"
+target_compile_definitions(external_kcoreaddons
+PUBLIC
+    KCOREADDONS_EXPORT=
+PRIVATE
+    ACCOUNTS_SERVICE_ICON_DIR="/var/lib/AccountsService/icons"
 )
 
 target_include_directories(external_kcoreaddons SYSTEM
-INTERFACE
-    /usr/local/include/KF${QT_VERSION_MAJOR}/KCoreAddons
+PUBLIC
+    ${kcoreaddons_src}/io
+    ${kcoreaddons_src}/util
+    ${CMAKE_CURRENT_BINARY_DIR}/include
+PRIVATE
+    ${CMAKE_CURRENT_BINARY_DIR}
 )
 
 target_link_libraries(external_kcoreaddons
-INTERFACE
+PRIVATE
     desktop-app::external_qt
 )
diff --git a/external/kcoreaddons/KSandbox b/external/kcoreaddons/KSandbox
deleted file mode 100644
index 83c0674..0000000
--- a/external/kcoreaddons/KSandbox
+++ /dev/null
@@ -1,23 +0,0 @@
-// This file is part of Desktop App Toolkit,
-// a set of libraries for developing nice desktop applications.
-//
-// For license and copyright information please follow this link:
-// https://github.com/desktop-app/legal/blob/master/LEGAL
-//
-#pragma once
-
-namespace KSandbox {
-
-inline bool isInside() {
-    return false;
-}
-
-inline bool isFlatpak() {
-    return false;
-}
-
-inline bool isSnap() {
-    return false;
-}
-
-} // namespace KSandbox
diff --git a/external/kcoreaddons/KUrlMimeData b/external/kcoreaddons/KUrlMimeData
deleted file mode 100644
index 23e0485..0000000
--- a/external/kcoreaddons/KUrlMimeData
+++ /dev/null
@@ -1,26 +0,0 @@
-// This file is part of Desktop App Toolkit,
-// a set of libraries for developing nice desktop applications.
-//
-// For license and copyright information please follow this link:
-// https://github.com/desktop-app/legal/blob/master/LEGAL
-//
-#pragma once
-
-#include <QtCore/QMimeData>
-
-namespace KUrlMimeData {
-
-enum DecodeOptions {
-    PreferLocalUrls,
-    PreferKdeUrls,
-};
-
-inline bool exportUrlsToPortal(QMimeData *mimeData) {
-    return false;
-}
-
-inline auto urlsFromMimeData(const QMimeData *mimeData, ...) {
-    return mimeData->urls();
-}
-
-} // namespace KUrlMimeData
diff --git a/external/qt/package.cmake b/external/qt/package.cmake
index fde6ead..2691a34 100644
--- a/external/qt/package.cmake
+++ b/external/qt/package.cmake
@@ -44,9 +44,7 @@ if (LINUX)
         find_package(Qt${QT_VERSION_MAJOR} COMPONENTS WaylandClient REQUIRED)
     endif()
 
-    if ((NOT DESKTOP_APP_USE_PACKAGED
-                OR (DESKTOP_APP_USE_PACKAGED AND DESKTOP_APP_USE_PACKAGED_LAZY))
-            AND NOT DESKTOP_APP_DISABLE_DBUS_INTEGRATION)
+    if (NOT DESKTOP_APP_DISABLE_DBUS_INTEGRATION)
         find_package(Qt${QT_VERSION_MAJOR} COMPONENTS DBus REQUIRED)
     elseif (NOT DESKTOP_APP_USE_PACKAGED)
         find_package(Qt${QT_VERSION_MAJOR} OPTIONAL_COMPONENTS DBus QUIET)
