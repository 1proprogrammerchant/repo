From da4f799fcac21635ea37bd929ffa055b3460ff7d Mon Sep 17 00:00:00 2001
From: Yichao Yu <yyc1992@gmail.com>
Date: Wed, 29 Sep 2021 19:23:42 -0400
Subject: [PATCH 01/10] Fix handling of fstatat on new kernels

The code was returning EINVAL for new flags added in 2.6.38 and 2.6.39.
Also disable the patch for PROOT_FORCE_KOMPAT much like the futex handler.

This fixes test-071599da
---
 src/extension/kompat/kompat.c | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/extension/kompat/kompat.c b/src/extension/kompat/kompat.c
index 426f304..f6c5f43 100644
--- a/src/extension/kompat/kompat.c
+++ b/src/extension/kompat/kompat.c
@@ -313,10 +313,10 @@ static int handle_sysenter_end(Tracee *tracee, Config *config)
 			}
 		};
 
-		flags = peek_reg(tracee, CURRENT, SYSARG_4);
-		if ((flags & ~AT_SYMLINK_NOFOLLOW) != 0)
-			return -EINVAL; /* Exposed by LTP.  */
+		if (config->actual_release == 0)
+			return 0;
 
+		flags = peek_reg(tracee, CURRENT, SYSARG_4);
 #if defined(ARCH_X86_64)
 		if ((flags & AT_SYMLINK_NOFOLLOW) != 0)
 			modif.new_sysarg_num = (get_abi(tracee) != ABI_2 ? PR_lstat : PR_lstat64);
@@ -329,7 +329,14 @@ static int handle_sysenter_end(Tracee *tracee, Config *config)
 			modif.new_sysarg_num = PR_stat64;
 #endif
 
-		modify_syscall(tracee, config, &modif);
+		if (modify_syscall(tracee, config, &modif)) {
+			// Do this check only if we are patching this syscall.
+			// New flags have been added since 2.6.38
+			// that we should not error on.
+			if ((flags & ~AT_SYMLINK_NOFOLLOW) != 0) {
+				return -EINVAL; /* Exposed by LTP.  */
+			}
+		}
 		return 0;
 	}
 
-- 
2.33.0

