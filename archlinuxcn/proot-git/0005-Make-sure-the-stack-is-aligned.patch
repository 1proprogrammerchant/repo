From eaea135770bae292a124ff1cb0cc90a44782ada8 Mon Sep 17 00:00:00 2001
From: Yichao Yu <yyc1992@gmail.com>
Date: Thu, 30 Sep 2021 05:35:19 -0400
Subject: [PATCH 5/6] Make sure the stack is aligned

This is required on AArch64.
X86 also requires this for SIMD code.
---
 src/arch.h                    | 1 +
 src/execve/exit.c             | 5 ++---
 src/extension/kompat/kompat.c | 8 ++++++--
 src/tracee/mem.c              | 3 +++
 4 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/src/arch.h b/src/arch.h
index 58e15af..0252114 100644
--- a/src/arch.h
+++ b/src/arch.h
@@ -33,6 +33,7 @@ typedef unsigned char byte_t;
 
 #define SYSCALL_AVOIDER ((word_t) -2)
 #define SYSTRAP_NUM SYSARG_NUM
+#define STACK_ALIGNMENT 16
 
 #define OFFSETOF_STATX_UID 20
 #define OFFSETOF_STATX_GID 24
diff --git a/src/execve/exit.c b/src/execve/exit.c
index c6faf6a..415d7df 100644
--- a/src/execve/exit.c
+++ b/src/execve/exit.c
@@ -223,10 +223,9 @@ static int transfer_load_script(Tracee *tracee)
 			: strlen(tracee->load_info->raw_path) + 1);
 
 	/* A padding will be appended at the end of the load script
-	 * (a.k.a "strings area") to ensure this latter is aligned to
-	 * a word boundary, for sake of performance.  */
+	 * (a.k.a "strings area") to ensure this latter is aligned properly. */
 	padding_size = (stack_pointer - string1_size - string2_size - string3_size)
-			% sizeof_word(tracee);
+			% STACK_ALIGNMENT;
 
 	strings_size = string1_size + string2_size + string3_size + padding_size;
 	string1_address = stack_pointer - strings_size;
diff --git a/src/extension/kompat/kompat.c b/src/extension/kompat/kompat.c
index f6c5f43..102a9a0 100644
--- a/src/extension/kompat/kompat.c
+++ b/src/extension/kompat/kompat.c
@@ -612,6 +612,7 @@ static void adjust_elf_auxv(Tracee *tracee, Config *config)
 	word_t stack_pointer;
 	void *argv_envp;
 	size_t size;
+	size_t reserve_size;
 	int status;
 
 	vectors_address = get_elf_aux_vectors_address(tracee);
@@ -678,8 +679,11 @@ static void adjust_elf_auxv(Tracee *tracee, Config *config)
 
 	/* Allocate enough room in tracee's stack for the new ELF
 	 * auxiliary vector.  */
-	stack_pointer   -= 2 * sizeof_word(tracee);
-	vectors_address -= 2 * sizeof_word(tracee);
+	reserve_size = 2 * sizeof_word(tracee);
+	/* Make sure the stack is still aligned */
+	reserve_size = ((reserve_size - 1) / STACK_ALIGNMENT + 1) * STACK_ALIGNMENT;
+	stack_pointer   -= reserve_size;
+	vectors_address -= reserve_size;
 
 	/* Note that it is safe to update the stack pointer manually
 	 * since we are in execve sysexit.  However it should be done
diff --git a/src/tracee/mem.c b/src/tracee/mem.c
index 4294efc..368daec 100644
--- a/src/tracee/mem.c
+++ b/src/tracee/mem.c
@@ -508,6 +508,9 @@ word_t alloc_mem(Tracee *tracee, ssize_t size)
 	if (stack_pointer == peek_reg(tracee, ORIGINAL, STACK_POINTER))
 		size += RED_ZONE_SIZE;
 
+	/* Align the stack */
+	size = ((size - 1) / STACK_ALIGNMENT + 1) * STACK_ALIGNMENT;
+
 	/* Sanity check. */
 	if (   (size > 0 && stack_pointer <= (word_t) size)
 	    || (size < 0 && stack_pointer >= ULONG_MAX + size)) {
-- 
2.33.0

